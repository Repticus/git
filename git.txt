git init => vytvori novy repozitar

git status => vypise aktualni branch a stav souboru

git add <soubor> => oznaci soubor k zapisu do repozitare
git add -A       => oznaci vsechny nove i zmenene soubory k zapisu do repozitare
git add -p       => rozdeli zmeny na vice casti, lze takto oznacit k zapisu jen nektere zmeny

git rm <soubor>   => vymaze soubor z pracovniho adresare i z repozitare a zrusi sledovani
git rm -f         => vymaze soubor z pracovniho adresare a zrusi sledovani ikdyz soubor jeste neni v repozitari
git rm --cached   => vymaze soubor pouze ze sledovani

git mv <soubor> <novysoubor> => prejmenuje soubor ve staged i v pracovnim adresari

git reset <vetev>           => obnovi vetev v repozitari do stavu z posledni ulozene revize,
                               ale zmeny v pracovnim adresari zustanou zachovany.
git reset <vetev> --hard    => obnovi vetev v repozitari vcetne pracovniho adresare a zahodi veskere zmeny
git reset HEAD <soubor>     => obnovi soubor v repozitari do stavu z aktualni revize,
                               ale zmeny v pracovnim adresari zustanou zachovany.
git reset HEAD^ -- <soubor> => obnovi soubor v repozitari do stavu z predchazejici revize,
                               ale zmeny v pracovnim adresari zustanou zachovany.
git commit             => zapise soubory oznacene k zapsani do nove revize, zepta se na zpravu k revizi obsahujici popis zmeny
git commit -m "zprava" => zapise soubory oznacene k zapsani do nove revize, pouzije uvedeny text zpravy
git commit -a          => zapise do nove revize vsechny sledovane soubory u kterych doslo ke zmene, neni potreba pouzit git add
git commit --amend     => prepise posledni revizi

git log                     => vypise seznam zmen v repozitari
git log -<pocet>            => omezi vypis na zadany pocet zaznamu
git log -p                  => pro kazdou revizi vypise seznam zmen v radkove forme
git log -p --word-diff      => pro kazdou revizi vypise seznam zmen ve forme zmenenych slov
git log --oneline           => vypise revize na jeden radek a zkrati hashe na 7 znaku
git log --stat              => vypise statistiky zmen
git log <revize>...<revize> => vypise pouze zmeny mezi zadanymi revizemi
